package Clinic.Clinic.adapter.in.client;

import Clinic.Clinic.adapter.in.builder.InsurancePolicyBuilder;
import Clinic.Clinic.application.usecases.InsurancePolicyUseCase;
import Clinic.Clinic.domain.model.InsurancePolicy;

import java.util.Scanner;

public class InsurancePolicyClient {

    private final InsurancePolicyBuilder builder;
    private final InsurancePolicyUseCase useCase;

    public InsurancePolicyClient(InsurancePolicyBuilder builder, InsurancePolicyUseCase useCase) {
        this.builder = builder;
        this.useCase = useCase;
    }

    public void run() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("=== Gesti√≥n de P√≥lizas de Seguro ===");
        System.out.println("1. Registrar p√≥liza");
        System.out.println("2. Validar p√≥liza");
        System.out.println("3. Consultar p√≥liza");
        System.out.println("4. Verificar vencimiento");
        System.out.print("Seleccione una opci√≥n: ");
        String option = scanner.nextLine();

        try {
            switch (option) {
                case "1" -> {
                    System.out.print("Nombre de la compa√±√≠a: ");
                    String company = scanner.nextLine();
                    System.out.print("N√∫mero de p√≥liza: ");
                    String number = scanner.nextLine();
                    System.out.print("¬øEst√° activa? (true/false): ");
                    String active = scanner.nextLine();
                    System.out.print("Fecha de vencimiento (yyyy-MM-dd): ");
                    String endDate = scanner.nextLine();

                    InsurancePolicy policy = builder.build(company, number, active, endDate);
                    useCase.createPolicy(policy);
                    System.out.println("‚úÖ P√≥liza registrada exitosamente.");
                }

                case "2" -> {
                    System.out.print("N√∫mero de p√≥liza: ");
                    String number = scanner.nextLine();
                    boolean valid = useCase.validatePolicy(number);
                    System.out.println(valid ? "‚úÖ La p√≥liza es v√°lida." : "‚ùå La p√≥liza no es v√°lida.");
                }

                case "3" -> {
                    System.out.print("N√∫mero de p√≥liza: ");
                    String number = scanner.nextLine();
                    InsurancePolicy policy = useCase.findPolicyByNumber(number);
                    System.out.println("üìÑ P√≥liza encontrada:");
                    System.out.println("Compa√±√≠a: " + policy.getCompanyName());
                    System.out.println("Activa: " + policy.isActive());
                    System.out.println("Vence: " + policy.getEndDate());
                }

                case "4" -> {
                    System.out.print("N√∫mero de p√≥liza: ");
                    String number = scanner.nextLine();
                    InsurancePolicy policy = useCase.findPolicyByNumber(number);
                    boolean expired = useCase.isPolicyExpired(policy);
                    System.out.println(expired ? "‚ö†Ô∏è La p√≥liza est√° vencida." : "‚úÖ La p√≥liza est√° vigente.");
                }

                default -> System.out.println("‚ùå Opci√≥n inv√°lida.");
            }
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Error: " + e.getMessage());
        }
    }
}
